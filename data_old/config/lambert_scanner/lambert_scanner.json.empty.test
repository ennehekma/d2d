// Copyright (c) 2014-2016 Kartik Kumar, Dinamica Srl (me@kartikkumar.com)
// Distributed under the MIT License.
// See accompanying file LICENSE.md or copy at http://opensource.org/licenses/MIT

// Configuration file for D2D "lambert_scanner" application mode.
{
    "mode"                      : "lambert_scanner",

    // Set path to TLE catalog file.
    "catalog"                   : "../data/catalog/test_catalog.txt",

    // Set path to output database (SQLite).
    // WARNING: if the database file already exists, it will be overwritten!
    "database"                  : "../data/test_lambert_scanner_catalog.db",

    // Set departure epoch grid.  
    // Format: [first departure epoch ([year,month,day,hours,minutes,seconds]), range (s), # of steps]. 
    // All elements in the array first departure epoch must be integers. The elements year, month
    // and day are required. The others are optional but must be included from left to right.
    // If first departure epoch is left empty, the TLE epoch for the departure object is assumed.
    // "departure_epoch_grid"      : [[,,],,],

    // "departure_epoch_grid"      : {
    "departure_epoch"           : {
                                    "year" : 2015,
                                    "month" : 6,
                                    "day" : 25,
                                    "hour" : 17,
                                    "minute" : 0,
                                    "second" : 0,
                                    
                                    "range" : 0,
                                    "steps" : 0
                                   },
                                //   "range"          : ,
                                  //   "steps"          : 
                                  // },

    
    // Set time-of-flight grid: [min (s), max (s), # of steps].
    "time_of_flight_grid"       : [1,2,2],


    // Set flag indicating if transfers are prograde. If set to false, retrograde transfers are
    // computed.
    // N.B.: Since SQLite doesn't have a boolean type, the flag is stored as an integer
    // (0=false, 1=true)
    "is_prograde"               : false,

    // Set maximum number of transfer revolutions (N).
    "revolutions_maximum"       : 1,

    // Set number of transfers to include in shortlist and absolute path to output file [N, file].
    // The shortlist is based on the N transfers specified with the lowest transfers Delta-V.
    // If N is set to 0 no output will be written to file.
    "shortlist"                 : [0,""]
}